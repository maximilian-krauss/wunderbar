<Window x:Class="wunderbar.App.Ui.Dialogs.taskDialog"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:wunderbar.App.Data.Converter"
		Title="wunderbar - Edit/View Task" MinHeight="350" MinWidth="500"
		SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen"
		ResizeMode="CanResizeWithGrip" Loaded="Window_Loaded">
	<Window.Resources>
		<local:booleanConverter x:Key="boolConverter" />
		<local:unixDateTimeConverter x:Key="dateConverter" />
		<local:prettyDateConverter x:Key="prettyDateConverter" />
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Grid Grid.Column="1" Grid.Row="0" MinWidth="350" Margin="0 10 0 0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />	<!-- Used for Taskname -->
				<RowDefinition Height="Auto"/>	<!-- Used for is Important -->
				<RowDefinition Height="Auto" />	<!-- Used for the associated List -->
				<RowDefinition Height="Auto"/>	<!-- Used for Duedate -->
				<RowDefinition Height="*"/>		<!-- Used for Note-->
			</Grid.RowDefinitions>

			<!-- Taskname -->
			<Border Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Margin="0 0 10 0"
					BorderBrush="{x:Static SystemColors.ControlLightBrush}" BorderThickness="0 0 0 1" >
					<TextBox Foreground="#006E12" FontSize="16" Text="{Binding Name, ValidatesOnDataErrors=True}" 
						 Margin="10 0 10 5" BorderBrush="Transparent"
						 ToolTip="Enter a Name for your Task"/>
			</Border>
			
			
			<!-- Important? -->
			<CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Margin="10" IsChecked="{Binding Important, Converter={StaticResource boolConverter}}">Important task</CheckBox>
			
			<!-- Due Date -->
			<Label Grid.Column="0" Grid.Row="3" Margin="0 10" VerticalAlignment="Center" HorizontalAlignment="Left">Due:</Label>
			<StackPanel Grid.Column="1" Grid.Row="3" Margin="10" Orientation="Horizontal">
				<StackPanel.Resources>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Margin" Value="4" />
						<Setter Property="Padding" Value="2 0" />
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="BorderBrush" Value="{x:Null}" />
					</Style>
				</StackPanel.Resources>
				<Label VerticalAlignment="Center" Content="{Binding Date, Converter={StaticResource prettyDateConverter}, Mode=OneWay}" />
				<Button Click="Button_Click" Name="dateTriggerButton"
						ToolTip="Sets a due date for this task.">
					<Image Width="16" Height="16" Source="/Gfx/Images/Tasks/calendar.png" />
				</Button>
				<Button Click="btnNoDate_Click" ToolTip="Removes the due date for this task.">
					<Image Width="16" Height="16" Source="/Gfx/Images/Tasks/no_date.png" />
				</Button>
			</StackPanel>

			<Popup PopupAnimation="Fade" Name="ppDate" StaysOpen="false" PlacementTarget="{Binding ElementName=dateTriggerButton}"
				   Placement="Center" HorizontalAlignment="Left" VerticalAlignment="Bottom"
				   AllowsTransparency="True" x:FieldModifier="private">
				<Border BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
					<Calendar SelectedDate="{Binding Date, Converter={StaticResource dateConverter}}"
							  FirstDayOfWeek="Monday" SelectedDatesChanged="Calendar_SelectedDatesChanged" />
				</Border>
			</Popup>
			
			<!-- List -->
			<Label Grid.Column="0" Grid.Row="2" Margin="0 10" VerticalAlignment="Center">List:</Label>
			<ComboBox Name="cboLists" Grid.Column="1" Grid.Row="2" Margin="10"
					  DisplayMemberPath="Name" SelectedValuePath="Id"
					  SelectedValue="{Binding listId}" x:FieldModifier="private"></ComboBox>
			
			<!-- Note -->
			<Label Grid.Column="0" Grid.Row="4" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left">Note:</Label>
			<TextBox Grid.Column="1" Grid.Row="4"
					 TextWrapping="NoWrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible"
					 HorizontalScrollBarVisibility="Auto" Text="{Binding Note}" Margin="10 0"
					 MinHeight="80" HorizontalAlignment="Stretch" />
		</Grid>

		<!-- Controls -->
		<Border Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Style="{StaticResource BorderControls}">
			<StackPanel Orientation="Horizontal" FlowDirection="RightToLeft"  Margin="6">
				<StackPanel.Resources>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Padding" Value="10 2" />
						<Setter Property="Margin" Value=" 4 4" />
					</Style>
				</StackPanel.Resources>
				<Button Name="btnClose" Click="btnClose_Click" x:FieldModifier="private">Close</Button>
				<Button Name="btnDone" Click="btnDone_Click" x:FieldModifier="private">Mark as done</Button>
				<Button Name="btnPostpone" Click="btnPostpone_Click" x:FieldModifier="private">Postpone</Button>
			</StackPanel>
		</Border>
	</Grid>
</Window>
